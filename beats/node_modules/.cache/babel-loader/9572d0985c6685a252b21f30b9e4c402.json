{"ast":null,"code":"import _classCallCheck from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\n\nvar AppState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppState, _React$Component);\n\n  function AppState(props) {\n    var _this;\n\n    _classCallCheck(this, AppState);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppState).call(this, props));\n    _this.state = {\n      beatRowCount: 1,\n      soundRowCount: 1,\n      soundCardCount: 0,\n      noteValue: 1,\n      maxValue: 4,\n      noteValues: {\n        1: [\"drum\", \"shekere\", \"Ghana\"],\n        2: [\"Tubano\"]\n      },\n      decrementNoteValue: _this.decrementNoteValue()\n    };\n    return _this;\n  }\n\n  _createClass(AppState, [{\n    key: \"decrementNoteValue\",\n    value: function decrementNoteValue() {\n      if (this.state.noteValue === 1) {\n        this.setState({\n          noteValue: this.state.maxValue\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue - 1\n        });\n      }\n    }\n  }, {\n    key: \"incrementNoteValue\",\n    value: function incrementNoteValue() {\n      if (this.state.noteValue === this.state.maxValue) {\n        this.setState({\n          noteValue: 1\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue + 1\n        });\n      }\n    }\n  }, {\n    key: \"decrementBeatRowCount\",\n    value: function decrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementBeatRowCount\",\n    value: function incrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundCardCount\",\n    value: function decrementSoundCardCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundCardCount\",\n    value: function incrementSoundCardCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }]);\n\n  return AppState;\n}(React.Component);\n\nvar appState = new AppState();\nexport default appState;","map":{"version":3,"sources":["/home/jorenza/git/react/djim-beats/src/appState.js"],"names":["React","AppState","props","state","beatRowCount","soundRowCount","soundCardCount","noteValue","maxValue","noteValues","decrementNoteValue","setState","Component","appState"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CADL;AAETC,MAAAA,aAAa,EAAE,CAFN;AAGTC,MAAAA,cAAc,EAAE,CAHP;AAITC,MAAAA,SAAS,EAAE,CAJF;AAKTC,MAAAA,QAAQ,EAAE,CALD;AAMTC,MAAAA,UAAU,EAAE;AACR,WAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,CADK;AAER,WAAG,CAAC,QAAD;AAFK,OANH;AAUTC,MAAAA,kBAAkB,EAAE,MAAKA,kBAAL;AAVX,KAAb;AAFe;AAclB;;;;yCACoB;AACjB,UAAI,KAAKP,KAAL,CAAWI,SAAX,KAAyB,CAA7B,EAAgC;AAC5B,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK;AAAxB,SAAd;AACH,OAFD,MAEO;AACH,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB;AAApC,SAAd;AACH;AACJ;;;yCACoB;AACjB,UAAI,KAAKJ,KAAL,CAAWI,SAAX,KAAyB,KAAKJ,KAAL,CAAWK,QAAxC,EAAkD;AAC9C,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAFD,MAEO;AACH,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB;AAApC,SAAd;AACH;AACJ;;;4CACuB;AACpB,WAAKI,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;4CACuB;AACpB,WAAKO,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;8CACyB;AACtB,WAAKO,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;8CACyB;AACtB,WAAKO,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;;EAzCkBJ,KAAK,CAACY,S;;AA4C7B,IAAMC,QAAQ,GAAG,IAAIZ,QAAJ,EAAjB;AACA,eAAeY,QAAf","sourcesContent":["import React from 'react'\n\nclass AppState extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            beatRowCount: 1,\n            soundRowCount: 1,\n            soundCardCount: 0,\n            noteValue: 1,\n            maxValue: 4,\n            noteValues: {\n                1: [\"drum\", \"shekere\", \"Ghana\"],\n                2: [\"Tubano\"]\n            },\n            decrementNoteValue: this.decrementNoteValue()\n        }\n    }\n    decrementNoteValue() {\n        if (this.state.noteValue === 1) {\n            this.setState({ noteValue: this.state.maxValue })\n        } else {\n            this.setState({ noteValue: this.state.noteValue - 1 })\n        }\n    }\n    incrementNoteValue() {\n        if (this.state.noteValue === this.state.maxValue) {\n            this.setState({ noteValue: 1 })\n        } else {\n            this.setState({ noteValue: this.state.noteValue + 1 })\n        }\n    }\n    decrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n    decrementSoundCardCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementSoundCardCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n}\n\nconst appState = new AppState()\nexport default appState;\n"]},"metadata":{},"sourceType":"module"}