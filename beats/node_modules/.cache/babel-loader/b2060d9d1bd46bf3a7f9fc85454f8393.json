{"ast":null,"code":"import _classCallCheck from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jorenza/git/react/djim-beats/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport BeatsContainer from './beats/beats.js';\nimport SoundsContainer from './sounds/sounds.js';\nimport TitleContainer from './title/title.js';\nimport './index.css';\n\nvar AppContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppContainer, _React$Component);\n\n  function AppContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      measureCount: 1,\n      beatsPerMeasure: 4,\n      soundRowCount: 1,\n      soundCardCount: 0,\n      maxCards: 6,\n      noteValue: 1,\n      maxValue: 4,\n      maxRows: 4,\n      title: \"Tue tue\",\n      subtitle: \"From Ghana\",\n      noteValues: {\n        1: [\"drum\", \"shekere\", \"Ghana\"],\n        2: [\"Tubano\"]\n      }\n    };\n\n    _this.getSoundRows = function () {\n      var soundRows = {};\n\n      var cards = _this.getSoundCards();\n\n      cards.forEach(function (card, index) {\n        var rowNum = Math.ceil((index + 1) / _this.state.maxCards);\n\n        if (!soundRows[rowNum]) {\n          soundRows[rowNum] = [];\n        }\n\n        soundRows[rowNum].push(card);\n      });\n      return soundRows;\n    };\n\n    _this.getSoundCards = function () {\n      return _this.state.noteValues[_this.state.noteValue];\n    };\n\n    _this.decrementNoteValue = function () {\n      if (_this.state.noteValue === 1) {\n        _this.setState({\n          noteValue: _this.state.maxValue\n        });\n      } else {\n        _this.setState({\n          noteValue: _this.state.noteValue - 1\n        });\n      }\n\n      console.log(_this.state.noteValue);\n    };\n\n    _this.incrementNoteValue = function () {\n      if (_this.state.noteValue === _this.state.maxValue) {\n        _this.setState({\n          noteValue: 1\n        });\n      } else {\n        _this.setState({\n          noteValue: _this.state.noteValue + 1\n        });\n      }\n\n      console.log(_this.state.noteValue);\n    };\n\n    _this.decrementBeatRowCount = function () {\n      _this.setState({\n        beatRowCount: _this.beatRowCount - 1\n      });\n    };\n\n    _this.incrementBeatRowCount = function () {\n      _this.setState({\n        beatRowCount: _this.beatRowCount + 1\n      });\n    };\n\n    _this.decrementSoundCardCount = function () {\n      _this.setState({\n        soundCardCount: _this.soundCardCount - 1\n      });\n    };\n\n    _this.incrementSoundCardCount = function () {\n      _this.setState({\n        soundCardCount: _this.soundCardCount + 1\n      });\n    };\n\n    _this.decrementSoundRowCount = function () {\n      _this.setState({\n        soundRowCount: _this.soundRowCount - 1\n      });\n    };\n\n    _this.incrementSoundRowCount = function () {\n      _this.setState({\n        soundRowCount: _this.soundRowCount + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AppContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.decrementNoteValue.bind(this);\n      this.incrementNoteValue.bind(this);\n      this.decrementBeatRowCount.bind(this);\n      this.incrementBeatRowCount.bind(this);\n      this.decrementSoundCardCount.bind(this);\n      this.incrementSoundCardCount.bind(this);\n      this.decrementSoundRowCount.bind(this);\n      this.incrementSoundRowCount.bind(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement('div', {\n        className: \"djim-beats-container\"\n      }, React.createElement(TitleContainer, {\n        key: \"title_container\",\n        title: this.state.title,\n        subtitle: this.state.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(BeatsContainer, {\n        key: \"beats_container\",\n        measures: this.state.measureCount,\n        bpm: this.state.beatsPerMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(SoundsContainer, {\n        key: \"sounds_container\",\n        noteValue: this.state.noteValue,\n        incrementNoteValue: this.incrementNoteValue,\n        decrementNoteValue: this.decrementNoteValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppContainer;\n}(React.Component);\n\nReactDOM.render(React.createElement(AppContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/jorenza/git/react/djim-beats/src/index.js"],"names":["React","ReactDOM","BeatsContainer","SoundsContainer","TitleContainer","AppContainer","state","measureCount","beatsPerMeasure","soundRowCount","soundCardCount","maxCards","noteValue","maxValue","maxRows","title","subtitle","noteValues","getSoundRows","soundRows","cards","getSoundCards","forEach","card","index","rowNum","Math","ceil","push","decrementNoteValue","setState","console","log","incrementNoteValue","decrementBeatRowCount","beatRowCount","incrementBeatRowCount","decrementSoundCardCount","incrementSoundCardCount","decrementSoundRowCount","incrementSoundRowCount","bind","createElement","className","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport BeatsContainer from './beats/beats.js';\nimport SoundsContainer from './sounds/sounds.js';\nimport TitleContainer from './title/title.js';\n\nimport './index.css';\n\nclass AppContainer extends React.Component {\n    state = {\n        measureCount: 1,\n        beatsPerMeasure: 4,\n        soundRowCount: 1,\n        soundCardCount: 0,\n        maxCards: 6,\n        noteValue: 1,\n        maxValue: 4,\n        maxRows: 4,\n        title: \"Tue tue\",\n        subtitle: \"From Ghana\",\n        noteValues: {\n            1: [\"drum\", \"shekere\", \"Ghana\"],\n            2: [\"Tubano\"]\n        }\n    }\n    getSoundRows = () => {\n        const soundRows = {}\n        const cards = this.getSoundCards()\n        cards.forEach((card, index) => {\n            const rowNum = Math.ceil((index + 1) / this.state.maxCards)\n            if (!soundRows[rowNum]) {\n                soundRows[rowNum] = []\n            }\n            soundRows[rowNum].push(card)\n        })\n        return soundRows\n    }\n    getSoundCards = () => {\n        return this.state.noteValues[this.state.noteValue]\n    }\n    decrementNoteValue = () => {\n        if (this.state.noteValue === 1) {\n            this.setState({ noteValue: this.state.maxValue })\n        } else {\n            this.setState({ noteValue: this.state.noteValue - 1 })\n        }\n        console.log(this.state.noteValue)\n    }\n    incrementNoteValue = () => {\n        if (this.state.noteValue === this.state.maxValue) {\n            this.setState({ noteValue: 1 })\n        } else {\n            this.setState({ noteValue: this.state.noteValue + 1 })\n        }\n        console.log(this.state.noteValue)\n    }\n    decrementBeatRowCount = () => {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementBeatRowCount = () => {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n    decrementSoundCardCount = () => {\n        this.setState({ soundCardCount: this.soundCardCount - 1 })\n    }\n    incrementSoundCardCount = () => {\n        this.setState({ soundCardCount: this.soundCardCount + 1 })\n    }\n    decrementSoundRowCount = () => {\n        this.setState({ soundRowCount: this.soundRowCount - 1 })\n    }\n    incrementSoundRowCount = () => {\n        this.setState({ soundRowCount: this.soundRowCount + 1 })\n    }\n    componentWillMount() {\n        this.decrementNoteValue.bind(this)\n        this.incrementNoteValue.bind(this)\n        this.decrementBeatRowCount.bind(this)\n        this.incrementBeatRowCount.bind(this)\n        this.decrementSoundCardCount.bind(this)\n        this.incrementSoundCardCount.bind(this)\n        this.decrementSoundRowCount.bind(this)\n        this.incrementSoundRowCount.bind(this)\n    }\n    render() {\n        return React.createElement(\n            'div',\n            { className: \"djim-beats-container\" },\n            <TitleContainer key=\"title_container\" title={this.state.title} subtitle={this.state.subtitle}/>,\n            <BeatsContainer key=\"beats_container\" measures={this.state.measureCount} bpm={this.state.beatsPerMeasure}/>,\n            <SoundsContainer key=\"sounds_container\" noteValue={this.state.noteValue} incrementNoteValue={this.incrementNoteValue} decrementNoteValue={this.decrementNoteValue}/>\n        );\n    }\n}\n\nReactDOM.render(\n    <AppContainer/>,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}