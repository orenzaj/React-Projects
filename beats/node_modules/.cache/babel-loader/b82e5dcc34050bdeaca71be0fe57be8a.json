{"ast":null,"code":"import _classCallCheck from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\n\nvar AppState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppState, _React$Component);\n\n  function AppState(props) {\n    var _this;\n\n    _classCallCheck(this, AppState);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppState).call(this, props));\n    _this.state = {\n      beatRowCount: 1,\n      soundRowCount: 1,\n      soundCardCount: 0,\n      maxCards: 4,\n      noteValue: 1,\n      maxValue: 4,\n      maxRows: 4,\n      noteValues: {\n        1: [\"drum\", \"shekere\", \"Ghana\"],\n        2: [\"Tubano\"]\n      }\n    };\n\n    _this.state.decrementNoteValue = function () {\n      return _this.decrementNoteValue();\n    };\n\n    _this.state.incrementNoteValue = function () {\n      return _this.incrementNoteValue();\n    };\n\n    _this.state.decrementBeatRowCount = function () {\n      return _this.decrementBeatRowCount();\n    };\n\n    _this.state.incrementNoteValue = function () {\n      return _this.incrementBeatRowCount();\n    };\n\n    _this.state.decrementSoundCardCount = function () {\n      return _this.decrementSoundCardCount();\n    };\n\n    _this.state.incrementSoundCardCount = function () {\n      return _this.incrementSoundCardCount();\n    };\n\n    _this.state.decrementSoundRowCount = function () {\n      return _this.decrementSoundRowCount();\n    };\n\n    _this.state.incrementSoundRowCount = function () {\n      return _this.incrementSoundRowCount();\n    };\n\n    _this.state.getSoundCards = _this.getSoundCards();\n    _this.state.getSoundRows = _this.getSoundRows();\n    return _this;\n  }\n\n  _createClass(AppState, [{\n    key: \"getSoundRows\",\n    value: function getSoundRows() {\n      var soundRows = {};\n      var cards = this.state.getSoundCards;\n\n      for (var i = 0; i < cards.length; i++) {\n        var rowNum = Math.ceil(cards.length / this.state.maxCards);\n        soundRows[rowNum].push(cards[i]);\n      }\n\n      console.log(soundRows);\n      return soundRows;\n    }\n  }, {\n    key: \"getSoundCards\",\n    value: function getSoundCards() {\n      return this.state.noteValues[this.state.noteValue];\n    }\n  }, {\n    key: \"decrementNoteValue\",\n    value: function decrementNoteValue() {\n      if (this.state.noteValue === 1) {\n        this.setState({\n          noteValue: this.state.maxValue\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue - 1\n        });\n      }\n    }\n  }, {\n    key: \"incrementNoteValue\",\n    value: function incrementNoteValue() {\n      if (this.state.noteValue === this.state.maxValue) {\n        this.setState({\n          noteValue: 1\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue + 1\n        });\n      }\n    }\n  }, {\n    key: \"decrementBeatRowCount\",\n    value: function decrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementBeatRowCount\",\n    value: function incrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundCardCount\",\n    value: function decrementSoundCardCount() {\n      this.setState({\n        soundCardCount: this.soundCardCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundCardCount\",\n    value: function incrementSoundCardCount() {\n      this.setState({\n        soundCardCount: this.soundCardCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundRowCount\",\n    value: function decrementSoundRowCount() {\n      this.setState({\n        soundRowCount: this.soundRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundRowCount\",\n    value: function incrementSoundRowCount() {\n      this.setState({\n        soundRowCount: this.soundRowCount + 1\n      });\n    }\n  }]);\n\n  return AppState;\n}(React.Component);\n\nvar appState = new AppState();\nexport default appState;","map":{"version":3,"sources":["/home/jorenza/git/react/djim-beats/src/appState.js"],"names":["React","AppState","props","state","beatRowCount","soundRowCount","soundCardCount","maxCards","noteValue","maxValue","maxRows","noteValues","decrementNoteValue","incrementNoteValue","decrementBeatRowCount","incrementBeatRowCount","decrementSoundCardCount","incrementSoundCardCount","decrementSoundRowCount","incrementSoundRowCount","getSoundCards","getSoundRows","soundRows","cards","i","length","rowNum","Math","ceil","push","console","log","setState","Component","appState"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass AppState extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            beatRowCount: 1,\n            soundRowCount: 1,\n            soundCardCount: 0,\n            maxCards: 4,\n            noteValue: 1,\n            maxValue: 4,\n            maxRows: 4,\n            noteValues: {\n                1: [\"drum\", \"shekere\", \"Ghana\"],\n                2: [\"Tubano\"]\n            },\n        }\n        this.state.decrementNoteValue = () => this.decrementNoteValue()\n        this.state.incrementNoteValue = () => this.incrementNoteValue()\n        this.state.decrementBeatRowCount = () => this.decrementBeatRowCount()\n        this.state.incrementNoteValue = () => this.incrementBeatRowCount()\n        this.state.decrementSoundCardCount = () => this.decrementSoundCardCount()\n        this.state.incrementSoundCardCount = () => this.incrementSoundCardCount()\n        this.state.decrementSoundRowCount = () => this.decrementSoundRowCount()\n        this.state.incrementSoundRowCount = () => this.incrementSoundRowCount()\n        this.state.getSoundCards = this.getSoundCards()\n        this.state.getSoundRows = this.getSoundRows()\n    }\n    getSoundRows(){\n        const soundRows = {}\n        const cards = this.state.getSoundCards\n        for (let i = 0; i < cards.length; i++) {\n            const rowNum = Math.ceil(cards.length / this.state.maxCards)\n            soundRows[rowNum].push(cards[i])\n        }\n        console.log(soundRows)\n        return soundRows\n    }\n    getSoundCards(){\n        return this.state.noteValues[this.state.noteValue]\n    }\n    decrementNoteValue() {\n        if (this.state.noteValue === 1) {\n            this.setState({ noteValue: this.state.maxValue })\n        } else {\n            this.setState({ noteValue: this.state.noteValue - 1 })\n        }\n    }\n    incrementNoteValue() {\n        if (this.state.noteValue === this.state.maxValue) {\n            this.setState({ noteValue: 1 })\n        } else {\n            this.setState({ noteValue: this.state.noteValue + 1 })\n        }\n    }\n    decrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n    decrementSoundCardCount() {\n        this.setState({ soundCardCount: this.soundCardCount - 1 })\n    }\n    incrementSoundCardCount() {\n        this.setState({ soundCardCount: this.soundCardCount + 1 })\n    }\n    decrementSoundRowCount() {\n        this.setState({ soundRowCount: this.soundRowCount - 1 })\n    }\n    incrementSoundRowCount() {\n        this.setState({ soundRowCount: this.soundRowCount + 1 })\n    }\n}\n\nconst appState = new AppState()\nexport default appState;\n"]},"metadata":{},"sourceType":"module"}