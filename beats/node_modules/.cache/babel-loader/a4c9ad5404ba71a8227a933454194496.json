{"ast":null,"code":"import _classCallCheck from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\n\nvar BeatsState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BeatsState, _React$Component);\n\n  function BeatsState(props) {\n    var _this;\n\n    _classCallCheck(this, BeatsState);\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(BeatsState, [{\n    key: \"decrementNoteValue\",\n    value: function decrementNoteValue() {\n      if (this.state.noteValue === 1) {\n        this.setState({\n          noteValue: this.state.maxValue\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue - 1\n        });\n      }\n    }\n  }, {\n    key: \"incrementNoteValue\",\n    value: function incrementNoteValue() {\n      if (this.state.noteValue === this.state.maxValue) {\n        this.setState({\n          noteValue: 1\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue + 1\n        });\n      }\n    }\n  }, {\n    key: \"decrementBeatRowCount\",\n    value: function decrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementBeatRowCount\",\n    value: function incrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundCardCount\",\n    value: function decrementSoundCardCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundCardCount\",\n    value: function incrementSoundCardCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }]);\n\n  return BeatsState;\n}(React.Component);\n\nexport default BeatsState;","map":{"version":3,"sources":["/home/jorenza/git/react/djim-beats/src/state.js"],"names":["React","BeatsState","props","state","noteValue","setState","maxValue","beatRowCount","Component"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;AAClB;;;;yCAQoB;AACjB,UAAI,KAAKC,KAAL,CAAWC,SAAX,KAAyB,CAA7B,EAAgC;AAC5B,aAAKC,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG;AAAxB,SAAd;AACH,OAFD,MAEO;AACH,aAAKD,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,GAAuB;AAApC,SAAd;AACH;AACJ;;;yCACoB;AACjB,UAAI,KAAKD,KAAL,CAAWC,SAAX,KAAyB,KAAKD,KAAL,CAAWG,QAAxC,EAAkD;AAC9C,aAAKD,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAFD,MAEO;AACH,aAAKC,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,GAAuB;AAApC,SAAd;AACH;AACJ;;;4CACuB;AACpB,WAAKC,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;4CACuB;AACpB,WAAKF,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;8CACyB;AACtB,WAAKF,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;8CACyB;AACtB,WAAKF,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB;AAApC,OAAd;AACH;;;;EAnCoBP,KAAK,CAACQ,S;;AAsC/B,eAAeP,UAAf","sourcesContent":["import React from 'react'\n\nclass BeatsState extends React.Component{\n    constructor(props) {\n    }\n    state = {\n        beatRowCount: 1,\n        soundRowCount: 1,\n        soundCardCount: 0,\n        noteValue: 1,\n        maxValue: 4\n    }\n    decrementNoteValue() {\n        if (this.state.noteValue === 1) {\n            this.setState({ noteValue: this.state.maxValue })\n        } else {\n            this.setState({ noteValue: this.state.noteValue - 1 })\n        }\n    }\n    incrementNoteValue() {\n        if (this.state.noteValue === this.state.maxValue) {\n            this.setState({ noteValue: 1 })\n        } else {\n            this.setState({ noteValue: this.state.noteValue + 1 })\n        }\n    }\n    decrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n    decrementSoundCardCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementSoundCardCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n}\n\nexport default BeatsState;\n"]},"metadata":{},"sourceType":"module"}