{"ast":null,"code":"import _classCallCheck from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\n\nvar AppState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppState, _React$Component);\n\n  function AppState() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppState);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppState)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      beatRowCount: 1,\n      soundRowCount: 1,\n      soundCardCount: 0,\n      maxCards: 6,\n      noteValue: 1,\n      maxValue: 4,\n      maxRows: 4,\n      noteValues: {\n        1: [\"drum\", \"shekere\", \"Ghana\"],\n        2: [\"Tubano\"]\n      }\n    };\n\n    _this.decrementNoteValue = function () {\n      return _this.decrementNoteValue;\n    };\n\n    _this.incrementNoteValue = function () {\n      return _this.incrementNoteValue;\n    };\n\n    return _this;\n  }\n\n  _createClass(AppState, [{\n    key: \"getSoundRows\",\n    value: function getSoundRows() {\n      var _this2 = this;\n\n      var soundRows = {};\n      var cards = this.getSoundCards();\n      cards.forEach(function (card, index) {\n        var rowNum = Math.ceil((index + 1) / _this2.state.maxCards);\n\n        if (!soundRows[rowNum]) {\n          soundRows[rowNum] = [];\n        }\n\n        soundRows[rowNum].push(card);\n      });\n      return soundRows;\n    }\n  }, {\n    key: \"getSoundCards\",\n    value: function getSoundCards() {\n      return this.state.noteValues[this.state.noteValue];\n    }\n  }, {\n    key: \"decrementNoteValue\",\n    value: function decrementNoteValue() {\n      console.log(this.state.noteValue);\n\n      if (this.state.noteValue === 1) {\n        this.setState({\n          noteValue: this.state.maxValue\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue - 1\n        });\n      }\n\n      console.log(this.state.noteValue);\n    }\n  }, {\n    key: \"incrementNoteValue\",\n    value: function incrementNoteValue() {\n      console.log(this.state.noteValue);\n\n      if (this.state.noteValue === this.state.maxValue) {\n        this.setState({\n          noteValue: 1\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue + 1\n        });\n      }\n\n      console.log(this.state.noteValue);\n    }\n  }, {\n    key: \"decrementBeatRowCount\",\n    value: function decrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementBeatRowCount\",\n    value: function incrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundCardCount\",\n    value: function decrementSoundCardCount() {\n      this.setState({\n        soundCardCount: this.soundCardCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundCardCount\",\n    value: function incrementSoundCardCount() {\n      this.setState({\n        soundCardCount: this.soundCardCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundRowCount\",\n    value: function decrementSoundRowCount() {\n      this.setState({\n        soundRowCount: this.soundRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundRowCount\",\n    value: function incrementSoundRowCount() {\n      this.setState({\n        soundRowCount: this.soundRowCount + 1\n      });\n    }\n  }]);\n\n  return AppState;\n}(React.Component);\n\nvar appState = new AppState();\nexport default appState;","map":{"version":3,"sources":["/home/jorenza/git/react/djim-beats/src/appState.js"],"names":["React","AppState","state","beatRowCount","soundRowCount","soundCardCount","maxCards","noteValue","maxValue","maxRows","noteValues","decrementNoteValue","incrementNoteValue","soundRows","cards","getSoundCards","forEach","card","index","rowNum","Math","ceil","push","console","log","setState","Component","appState"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass AppState extends React.Component{\n    state = {\n        beatRowCount: 1,\n        soundRowCount: 1,\n        soundCardCount: 0,\n        maxCards: 6,\n        noteValue: 1,\n        maxValue: 4,\n        maxRows: 4,\n        noteValues: {\n            1: [\"drum\", \"shekere\", \"Ghana\"],\n            2: [\"Tubano\"]\n        },\n    }\n    decrementNoteValue = () => { return this.decrementNoteValue }\n    incrementNoteValue = () => { return this.incrementNoteValue }\n    getSoundRows(){\n        const soundRows = {}\n        const cards = this.getSoundCards()\n        cards.forEach((card, index) => {\n            const rowNum = Math.ceil((index + 1) / this.state.maxCards)\n            if (!soundRows[rowNum]) {\n                soundRows[rowNum] = []\n            }\n            soundRows[rowNum].push(card)\n        })\n        return soundRows\n    }\n    getSoundCards(){\n        return this.state.noteValues[this.state.noteValue]\n    }\n    decrementNoteValue() {\n        console.log(this.state.noteValue)\n        if (this.state.noteValue === 1) {\n            this.setState({ noteValue: this.state.maxValue })\n        } else {\n            this.setState({ noteValue: this.state.noteValue - 1 })\n        }\n        console.log(this.state.noteValue)\n    }\n    incrementNoteValue() {\n        console.log(this.state.noteValue)\n        if (this.state.noteValue === this.state.maxValue) {\n            this.setState({ noteValue: 1 })\n        } else {\n            this.setState({ noteValue: this.state.noteValue + 1 })\n        }\n        console.log(this.state.noteValue)\n    }\n    decrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n    decrementSoundCardCount() {\n        this.setState({ soundCardCount: this.soundCardCount - 1 })\n    }\n    incrementSoundCardCount() {\n        this.setState({ soundCardCount: this.soundCardCount + 1 })\n    }\n    decrementSoundRowCount() {\n        this.setState({ soundRowCount: this.soundRowCount - 1 })\n    }\n    incrementSoundRowCount() {\n        this.setState({ soundRowCount: this.soundRowCount + 1 })\n    }\n}\n\nconst appState = new AppState()\nexport default appState;\n"]},"metadata":{},"sourceType":"module"}