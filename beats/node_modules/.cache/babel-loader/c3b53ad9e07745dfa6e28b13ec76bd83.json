{"ast":null,"code":"import _classCallCheck from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jorenza/git/react/djim-beats/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jorenza/git/react/djim-beats/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport BeatsContainer from './beats/beats.js';\nimport SoundsContainer from './sounds/sounds.js';\nimport TitleContainer from './title/title.js';\nimport './index.css';\n\nvar AppContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppContainer, _React$Component);\n\n  function AppContainer(props) {\n    var _this;\n\n    _classCallCheck(this, AppContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppContainer).call(this, props));\n    _this.state = {\n      measureCount: 1,\n      beatsPerMeasure: 4,\n      soundRowCount: 1,\n      soundCardCount: 0,\n      maxCards: 6,\n      noteValue: 1,\n      maxValue: 4,\n      maxRows: 4,\n      title: \"Tue tue\",\n      subtitle: \"From Ghana\",\n      noteValues: {\n        1: [\"drum\", \"shekere\", \"Ghana\"],\n        2: [\"Tubano\"]\n      }\n    };\n\n    _this.decrementNoteValue = function () {\n      _this.decrementNoteValue();\n    };\n\n    _this.incrementNoteValue = function () {\n      _this.incrementNoteValue();\n    };\n\n    _this.decrementBeatRowCount = function () {\n      _this.decrementBeatRowCount();\n    };\n\n    _this.incrementBeatRowCount = function () {\n      _this.incrementBeatRowCount();\n    };\n\n    _this.decrementSoundCardCount = function () {\n      _this.decrementSoundCardCount();\n    };\n\n    _this.incrementSoundCardCount = function () {\n      _this.incrementSoundCardCount();\n    };\n\n    _this.decrementSoundRowCount = function () {\n      _this.decrementSoundRowCount();\n    };\n\n    _this.incrementSoundRowCount = function () {\n      _this.incrementSoundRowCount();\n    };\n\n    return _this;\n  }\n\n  _createClass(AppContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"getSoundRows\",\n    value: function getSoundRows() {\n      var _this2 = this;\n\n      var soundRows = {};\n      var cards = this.getSoundCards();\n      cards.forEach(function (card, index) {\n        var rowNum = Math.ceil((index + 1) / _this2.state.maxCards);\n\n        if (!soundRows[rowNum]) {\n          soundRows[rowNum] = [];\n        }\n\n        soundRows[rowNum].push(card);\n      });\n      return soundRows;\n    }\n  }, {\n    key: \"getSoundCards\",\n    value: function getSoundCards() {\n      return this.state.noteValues[this.state.noteValue];\n    }\n  }, {\n    key: \"decrementNoteValue\",\n    value: function decrementNoteValue() {\n      console.log(this.state.noteValue);\n\n      if (this.state.noteValue === 1) {\n        this.setState({\n          noteValue: this.state.maxValue\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue - 1\n        });\n      }\n\n      console.log(this.state.noteValue);\n    }\n  }, {\n    key: \"incrementNoteValue\",\n    value: function incrementNoteValue() {\n      console.log(this.state.noteValue);\n\n      if (this.state.noteValue === this.state.maxValue) {\n        this.setState({\n          noteValue: 1\n        });\n      } else {\n        this.setState({\n          noteValue: this.state.noteValue + 1\n        });\n      }\n\n      console.log(this.state.noteValue);\n    }\n  }, {\n    key: \"decrementBeatRowCount\",\n    value: function decrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementBeatRowCount\",\n    value: function incrementBeatRowCount() {\n      this.setState({\n        beatRowCount: this.beatRowCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundCardCount\",\n    value: function decrementSoundCardCount() {\n      this.setState({\n        soundCardCount: this.soundCardCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundCardCount\",\n    value: function incrementSoundCardCount() {\n      this.setState({\n        soundCardCount: this.soundCardCount + 1\n      });\n    }\n  }, {\n    key: \"decrementSoundRowCount\",\n    value: function decrementSoundRowCount() {\n      this.setState({\n        soundRowCount: this.soundRowCount - 1\n      });\n    }\n  }, {\n    key: \"incrementSoundRowCount\",\n    value: function incrementSoundRowCount() {\n      this.setState({\n        soundRowCount: this.soundRowCount + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement('div', {\n        className: \"djim-beats-container\"\n      }, React.createElement(TitleContainer, {\n        key: \"title_container\",\n        title: this.state.title,\n        subtitle: this.state.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(BeatsContainer, {\n        key: \"beats_container\",\n        measures: this.state.measureCount,\n        bpm: this.state.beatsPerMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(SoundsContainer, {\n        key: \"sounds_container\",\n        noteValue: this.state.noteValue,\n        incrementNoteValue: this.incrementNoteValue,\n        decrementNoteValue: this.decrementNoteValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppContainer;\n}(React.Component);\n\nReactDOM.render(React.createElement(AppContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/jorenza/git/react/djim-beats/src/index.js"],"names":["React","ReactDOM","BeatsContainer","SoundsContainer","TitleContainer","AppContainer","props","state","measureCount","beatsPerMeasure","soundRowCount","soundCardCount","maxCards","noteValue","maxValue","maxRows","title","subtitle","noteValues","decrementNoteValue","incrementNoteValue","decrementBeatRowCount","incrementBeatRowCount","decrementSoundCardCount","incrementSoundCardCount","decrementSoundRowCount","incrementSoundRowCount","soundRows","cards","getSoundCards","forEach","card","index","rowNum","Math","ceil","push","console","log","setState","beatRowCount","createElement","className","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport BeatsContainer from './beats/beats.js';\nimport SoundsContainer from './sounds/sounds.js';\nimport TitleContainer from './title/title.js';\n\nimport './index.css';\n\n\nclass AppContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            measureCount: 1,\n            beatsPerMeasure: 4,\n            soundRowCount: 1,\n            soundCardCount: 0,\n            maxCards: 6,\n            noteValue: 1,\n            maxValue: 4,\n            maxRows: 4,\n            title: \"Tue tue\",\n            subtitle: \"From Ghana\",\n            noteValues: {\n                1: [\"drum\", \"shekere\", \"Ghana\"],\n                2: [\"Tubano\"]\n            },\n        }\n\n        this.decrementNoteValue = () => { this.decrementNoteValue() }\n        this.incrementNoteValue = () => { this.incrementNoteValue() }\n        this.decrementBeatRowCount = () => { this.decrementBeatRowCount() }\n        this.incrementBeatRowCount = () => { this.incrementBeatRowCount() }\n        this.decrementSoundCardCount = () => { this.decrementSoundCardCount() }\n        this.incrementSoundCardCount = () => { this.incrementSoundCardCount() }\n        this.decrementSoundRowCount = () => { this.decrementSoundRowCount() }\n        this.incrementSoundRowCount = () => { this.incrementSoundRowCount() }\n\n    }\n    componentWillMount() {\n\n    }\n    getSoundRows(){\n        const soundRows = {}\n        const cards = this.getSoundCards()\n        cards.forEach((card, index) => {\n            const rowNum = Math.ceil((index + 1) / this.state.maxCards)\n            if (!soundRows[rowNum]) {\n                soundRows[rowNum] = []\n            }\n            soundRows[rowNum].push(card)\n        })\n        return soundRows\n    }\n    getSoundCards(){\n        return this.state.noteValues[this.state.noteValue]\n    }\n    decrementNoteValue() {\n        console.log(this.state.noteValue)\n        if (this.state.noteValue === 1) {\n            this.setState({ noteValue: this.state.maxValue })\n        } else {\n            this.setState({ noteValue: this.state.noteValue - 1 })\n        }\n        console.log(this.state.noteValue)\n    }\n    incrementNoteValue() {\n        console.log(this.state.noteValue)\n        if (this.state.noteValue === this.state.maxValue) {\n            this.setState({ noteValue: 1 })\n        } else {\n            this.setState({ noteValue: this.state.noteValue + 1 })\n        }\n        console.log(this.state.noteValue)\n    }\n    decrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount - 1 })\n    }\n    incrementBeatRowCount() {\n        this.setState({ beatRowCount: this.beatRowCount + 1 })\n    }\n    decrementSoundCardCount() {\n        this.setState({ soundCardCount: this.soundCardCount - 1 })\n    }\n    incrementSoundCardCount() {\n        this.setState({ soundCardCount: this.soundCardCount + 1 })\n    }\n    decrementSoundRowCount() {\n        this.setState({ soundRowCount: this.soundRowCount - 1 })\n    }\n    incrementSoundRowCount() {\n        this.setState({ soundRowCount: this.soundRowCount + 1 })\n    }\n    render() {\n        return React.createElement(\n            'div',\n            { className: \"djim-beats-container\" },\n            <TitleContainer key=\"title_container\" title={this.state.title} subtitle={this.state.subtitle}/>,\n            <BeatsContainer key=\"beats_container\" measures={this.state.measureCount} bpm={this.state.beatsPerMeasure}/>,\n            <SoundsContainer key=\"sounds_container\" noteValue={this.state.noteValue} incrementNoteValue={this.incrementNoteValue} decrementNoteValue={this.decrementNoteValue}/>\n        );\n    }\n}\n\nReactDOM.render(\n    <AppContainer/>,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}